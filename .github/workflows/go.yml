name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: chisel
        # Directory containing files to upload
        path: chisel
    - name: Build and push Docker images
        uses: docker/build-push-action@v1.0.1
        with:
          # Username used to log in to a Docker registry. If not set then no login will occur
          username: jbednarik
          # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
          password: inrxQWE
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: # optional
          # Docker repository to tag the image with
          repository: 
          # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
          tags: # optional
          # Automatically tags the built image with the git reference as per the readme
          tag_with_ref: true
          # Automatically tags the built image with the git short SHA as per the readme
          tag_with_sha: # optional
          # Path to the build context
          path: # optional, default is .
          # Path to the Dockerfile (Default is '{path}/Dockerfile')
          dockerfile: # optional
          # Sets the target stage to build
          target: # optional
          # Always attempt to pull a newer version of the image
          always_pull: # optional
          # Comma-delimited list of build-time variables
          build_args: # optional
          # Comma-delimited list of labels to add to the built image
          labels: # optional
          # Adds labels with git repository information to the built image
          add_git_labels: # optional
          # Whether to push the image
          push: # optional, default is true:
